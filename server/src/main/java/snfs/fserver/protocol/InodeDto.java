// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: fs.proto
// Protobuf Java Version: 4.29.3

package snfs.fserver.protocol;

/**
 * Protobuf type {@code protocol.InodeDto}
 */
public final class InodeDto extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:protocol.InodeDto)
    InodeDtoOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      InodeDto.class.getName());
  }
  // Use InodeDto.newBuilder() to construct.
  private InodeDto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private InodeDto() {
    type_ = 1;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return snfs.fserver.protocol.FsProto.internal_static_protocol_InodeDto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return snfs.fserver.protocol.FsProto.internal_static_protocol_InodeDto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            snfs.fserver.protocol.InodeDto.class, snfs.fserver.protocol.InodeDto.Builder.class);
  }

  private int bitField0_;
  public static final int NO_FIELD_NUMBER = 1;
  private int no_ = 0;
  /**
   * <code>required int32 no = 1;</code>
   * @return Whether the no field is set.
   */
  @java.lang.Override
  public boolean hasNo() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>required int32 no = 1;</code>
   * @return The no.
   */
  @java.lang.Override
  public int getNo() {
    return no_;
  }

  public static final int TYPE_FIELD_NUMBER = 2;
  private int type_ = 1;
  /**
   * <code>required .protocol.InodeType type = 2;</code>
   * @return Whether the type field is set.
   */
  @java.lang.Override public boolean hasType() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>required .protocol.InodeType type = 2;</code>
   * @return The type.
   */
  @java.lang.Override public snfs.fserver.protocol.InodeType getType() {
    snfs.fserver.protocol.InodeType result = snfs.fserver.protocol.InodeType.forNumber(type_);
    return result == null ? snfs.fserver.protocol.InodeType.REG : result;
  }

  public static final int SIZE_FIELD_NUMBER = 4;
  private int size_ = 0;
  /**
   * <code>required int32 size = 4;</code>
   * @return Whether the size field is set.
   */
  @java.lang.Override
  public boolean hasSize() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>required int32 size = 4;</code>
   * @return The size.
   */
  @java.lang.Override
  public int getSize() {
    return size_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasNo()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasType()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasSize()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt32(1, no_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeEnum(2, type_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeInt32(4, size_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, no_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, type_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, size_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof snfs.fserver.protocol.InodeDto)) {
      return super.equals(obj);
    }
    snfs.fserver.protocol.InodeDto other = (snfs.fserver.protocol.InodeDto) obj;

    if (hasNo() != other.hasNo()) return false;
    if (hasNo()) {
      if (getNo()
          != other.getNo()) return false;
    }
    if (hasType() != other.hasType()) return false;
    if (hasType()) {
      if (type_ != other.type_) return false;
    }
    if (hasSize() != other.hasSize()) return false;
    if (hasSize()) {
      if (getSize()
          != other.getSize()) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasNo()) {
      hash = (37 * hash) + NO_FIELD_NUMBER;
      hash = (53 * hash) + getNo();
    }
    if (hasType()) {
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
    }
    if (hasSize()) {
      hash = (37 * hash) + SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getSize();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static snfs.fserver.protocol.InodeDto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static snfs.fserver.protocol.InodeDto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static snfs.fserver.protocol.InodeDto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static snfs.fserver.protocol.InodeDto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static snfs.fserver.protocol.InodeDto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static snfs.fserver.protocol.InodeDto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static snfs.fserver.protocol.InodeDto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static snfs.fserver.protocol.InodeDto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static snfs.fserver.protocol.InodeDto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static snfs.fserver.protocol.InodeDto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static snfs.fserver.protocol.InodeDto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static snfs.fserver.protocol.InodeDto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(snfs.fserver.protocol.InodeDto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code protocol.InodeDto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.InodeDto)
      snfs.fserver.protocol.InodeDtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return snfs.fserver.protocol.FsProto.internal_static_protocol_InodeDto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return snfs.fserver.protocol.FsProto.internal_static_protocol_InodeDto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              snfs.fserver.protocol.InodeDto.class, snfs.fserver.protocol.InodeDto.Builder.class);
    }

    // Construct using snfs.fserver.protocol.InodeDto.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      no_ = 0;
      type_ = 1;
      size_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return snfs.fserver.protocol.FsProto.internal_static_protocol_InodeDto_descriptor;
    }

    @java.lang.Override
    public snfs.fserver.protocol.InodeDto getDefaultInstanceForType() {
      return snfs.fserver.protocol.InodeDto.getDefaultInstance();
    }

    @java.lang.Override
    public snfs.fserver.protocol.InodeDto build() {
      snfs.fserver.protocol.InodeDto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public snfs.fserver.protocol.InodeDto buildPartial() {
      snfs.fserver.protocol.InodeDto result = new snfs.fserver.protocol.InodeDto(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(snfs.fserver.protocol.InodeDto result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.no_ = no_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.type_ = type_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.size_ = size_;
        to_bitField0_ |= 0x00000004;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof snfs.fserver.protocol.InodeDto) {
        return mergeFrom((snfs.fserver.protocol.InodeDto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(snfs.fserver.protocol.InodeDto other) {
      if (other == snfs.fserver.protocol.InodeDto.getDefaultInstance()) return this;
      if (other.hasNo()) {
        setNo(other.getNo());
      }
      if (other.hasType()) {
        setType(other.getType());
      }
      if (other.hasSize()) {
        setSize(other.getSize());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      if (!hasNo()) {
        return false;
      }
      if (!hasType()) {
        return false;
      }
      if (!hasSize()) {
        return false;
      }
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              no_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              int tmpRaw = input.readEnum();
              snfs.fserver.protocol.InodeType tmpValue =
                  snfs.fserver.protocol.InodeType.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(2, tmpRaw);
              } else {
                type_ = tmpRaw;
                bitField0_ |= 0x00000002;
              }
              break;
            } // case 16
            case 32: {
              size_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int no_ ;
    /**
     * <code>required int32 no = 1;</code>
     * @return Whether the no field is set.
     */
    @java.lang.Override
    public boolean hasNo() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 no = 1;</code>
     * @return The no.
     */
    @java.lang.Override
    public int getNo() {
      return no_;
    }
    /**
     * <code>required int32 no = 1;</code>
     * @param value The no to set.
     * @return This builder for chaining.
     */
    public Builder setNo(int value) {

      no_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 no = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearNo() {
      bitField0_ = (bitField0_ & ~0x00000001);
      no_ = 0;
      onChanged();
      return this;
    }

    private int type_ = 1;
    /**
     * <code>required .protocol.InodeType type = 2;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override public boolean hasType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required .protocol.InodeType type = 2;</code>
     * @return The type.
     */
    @java.lang.Override
    public snfs.fserver.protocol.InodeType getType() {
      snfs.fserver.protocol.InodeType result = snfs.fserver.protocol.InodeType.forNumber(type_);
      return result == null ? snfs.fserver.protocol.InodeType.REG : result;
    }
    /**
     * <code>required .protocol.InodeType type = 2;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(snfs.fserver.protocol.InodeType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>required .protocol.InodeType type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      type_ = 1;
      onChanged();
      return this;
    }

    private int size_ ;
    /**
     * <code>required int32 size = 4;</code>
     * @return Whether the size field is set.
     */
    @java.lang.Override
    public boolean hasSize() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required int32 size = 4;</code>
     * @return The size.
     */
    @java.lang.Override
    public int getSize() {
      return size_;
    }
    /**
     * <code>required int32 size = 4;</code>
     * @param value The size to set.
     * @return This builder for chaining.
     */
    public Builder setSize(int value) {

      size_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>required int32 size = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearSize() {
      bitField0_ = (bitField0_ & ~0x00000004);
      size_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:protocol.InodeDto)
  }

  // @@protoc_insertion_point(class_scope:protocol.InodeDto)
  private static final snfs.fserver.protocol.InodeDto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new snfs.fserver.protocol.InodeDto();
  }

  public static snfs.fserver.protocol.InodeDto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<InodeDto>
      PARSER = new com.google.protobuf.AbstractParser<InodeDto>() {
    @java.lang.Override
    public InodeDto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<InodeDto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<InodeDto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public snfs.fserver.protocol.InodeDto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

