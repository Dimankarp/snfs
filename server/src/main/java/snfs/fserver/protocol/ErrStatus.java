// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: fs.proto
// Protobuf Java Version: 4.29.3

package snfs.fserver.protocol;

/**
 * Protobuf enum {@code protocol.ErrStatus}
 */
public enum ErrStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>OK = 1;</code>
   */
  OK(1),
  /**
   * <code>MISSING = 2;</code>
   */
  MISSING(2),
  /**
   * <code>NOTDIR = 3;</code>
   */
  NOTDIR(3),
  /**
   * <code>ISDIR = 4;</code>
   */
  ISDIR(4),
  /**
   * <code>EMPTY = 5;</code>
   */
  EMPTY(5),
  /**
   * <code>UNKNOWN = 6;</code>
   */
  UNKNOWN(6),
  /**
   * <code>DUPLICATE = 7;</code>
   */
  DUPLICATE(7),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      ErrStatus.class.getName());
  }
  /**
   * <code>OK = 1;</code>
   */
  public static final int OK_VALUE = 1;
  /**
   * <code>MISSING = 2;</code>
   */
  public static final int MISSING_VALUE = 2;
  /**
   * <code>NOTDIR = 3;</code>
   */
  public static final int NOTDIR_VALUE = 3;
  /**
   * <code>ISDIR = 4;</code>
   */
  public static final int ISDIR_VALUE = 4;
  /**
   * <code>EMPTY = 5;</code>
   */
  public static final int EMPTY_VALUE = 5;
  /**
   * <code>UNKNOWN = 6;</code>
   */
  public static final int UNKNOWN_VALUE = 6;
  /**
   * <code>DUPLICATE = 7;</code>
   */
  public static final int DUPLICATE_VALUE = 7;


  public final int getNumber() {
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ErrStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ErrStatus forNumber(int value) {
    switch (value) {
      case 1: return OK;
      case 2: return MISSING;
      case 3: return NOTDIR;
      case 4: return ISDIR;
      case 5: return EMPTY;
      case 6: return UNKNOWN;
      case 7: return DUPLICATE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ErrStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ErrStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ErrStatus>() {
          public ErrStatus findValueByNumber(int number) {
            return ErrStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return snfs.fserver.protocol.FsProto.getDescriptor().getEnumTypes().get(1);
  }

  private static final ErrStatus[] VALUES = values();

  public static ErrStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ErrStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:protocol.ErrStatus)
}

